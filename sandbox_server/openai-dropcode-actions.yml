openapi: 3.1.0
info:
  title: Sandbox API
  description: A unified API for executing commands, reading files, writing files, and viewing logs in a sandboxed environment.
  version: 2.0.0
  x-openai:
    privacy_policy_url: https://bill-bishop.github.io/execution-sandbox/privacy-policy.txt
servers:
  - url: https://hermesai.dev
    description: Public-facing sandbox API
paths:
  /api/execute:
    post:
      operationId: executeCommand
      summary: Execute a bash command.
      description: |
        Accepts a bash command as input and executes it in the sandbox environment.
        Execution runs inside a PTY for true terminal-like behavior. Output is streamed as events via the WebSocket at `/ws/workspace`.
        The synchronous JSON response includes the job_id, return code, and the first 50KB of stdout/stderr.
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                pwd:
                  type: string
              required:
                - command
      responses:
        '200':
          description: Successfully executed the command.
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  command:
                    type: string
                  returncode:
                    type: integer
                  stdout:
                    type: string
                  stderr:
                    type: string
  /api/workspace/logs:
    get:
      operationId: getWorkspaceLogs
      summary: Get a slice of the workspace log buffer.
      description: |
        Returns recent command and output events from the shared workspace log.
        Use this endpoint to fetch history, while `/ws/workspace` provides live streaming.
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Absolute or negative offset (e.g. -20 for last 20 entries).
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Max number of events to return (default 100).
      responses:
        '200':
          description: Workspace log slice.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    seq_id:
                      type: integer
                    type:
                      type: string
                      enum: [command, output]
                    command:
                      type: string
                    stream:
                      type: string
                    line:
                      type: string
  /api/read:
    get:
      operationId: readFile
      summary: Read the content of a file.
      parameters:
        - name: filename
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully read the file.
  /api/read-partial:
    get:
      operationId: readPartial
      summary: Read part of a file with offset and limit.
      description: Fetches a chunk of file content starting at the given offset.
      security:
        - apiKeyAuth: []
      parameters:
        - name: filename
          in: query
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully read partial content.
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                  offset:
                    type: integer
                  nextOffset:
                    type: integer
                  eof:
                    type: boolean
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: API-Key
  schemas: {}
