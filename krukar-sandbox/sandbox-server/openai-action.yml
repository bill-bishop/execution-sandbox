openapi: 3.1.0
info:
  title: Sandbox API
  description: A unified API for executing commands, reading files, and writing files in a sandboxed environment.
  version: 1.0.0
  x-openai:
    privacy_policy_url: https://bill-bishop.github.io/execution-sandbox/privacy-policy.txt
servers:
  - url: https://9ae1e1744f73.ngrok-free.app
    description: Public-facing sandbox API
paths:
  /api/execute:
    post:
      operationId: executeCommand
      summary: Execute a bash command.
      description: Accepts a bash command as input and executes it in the sandbox environment.
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: The bash command to execute.
              required:
                - command
      responses:
        '200':
          description: Successfully executed the command.
          content:
            application/json:
              schema:
                type: object
                properties:
                  returncode:
                    type: integer
                    description: Exit code of the executed command.
                  stdout:
                    type: string
                    description: Standard output from the command execution.
                  stderr:
                    type: string
                    description: Standard error from the command execution.
                  message:
                    type: string
                    description: >
                      A formatted response embedding the input command and its output
                      in code blocks. The GPT should include this field verbatim at the start of its response.
        '401':
          description: Unauthorized – Missing or invalid API key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
  /api/read:
    get:
      operationId: readFile
      summary: Read the content of a file.
      description: Fetches the content of a file from the sandbox directory.
      security:
        - apiKeyAuth: []
      parameters:
        - name: filename
          in: query
          required: true
          schema:
            type: string
            description: The name of the file to read.
      responses:
        '200':
          description: Successfully read the file.
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                    description: The content of the file.
        '400':
          description: Bad Request – No filename provided.
        '404':
          description: File Not Found – The requested file does not exist.
        '401':
          description: Unauthorized – Missing or invalid API key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error – An error occurred while reading the file.
  /api/write:
    post:
      operationId: writeFile
      summary: Write content to a file using JSON input.
      description: Creates or overwrites a file in the sandbox directory with the specified filename and content provided in the request body.
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: The name of the file to write.
                content:
                  type: string
                  description: The content to write to the file.
              required:
                - filename
                - content
      responses:
        '200':
          description: Successfully wrote to the file.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the write operation (e.g., "success").
        '400':
          description: Bad Request – Missing filename or content in the request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
        '401':
          description: Unauthorized – Missing or invalid API key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
        '500':
          description: Internal Server Error – An error occurred while writing to the file.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: API-Key
      description: >
        To authenticate requests, include an `API-Key` header with your assigned key.
  schemas: {}
